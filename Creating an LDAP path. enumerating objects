## Finding the PDC, DN and creating an LDAP path for us
## The below script uses powershell, .NET classes and ADSI to dynamically obtain the full LDAP path for AD enumeration

## Copy the below to a powershell script
## Run powershell instance with powershell -ep bypass
## Execute your new powershell script .\{File name}

# Find PDC
$PDC = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().PdcRoleOwner.Name

# Find DN
$DN = ([adsi]'').distinguishedName

# Print our desired LDAP path
$LDAP = "LDAP://$PDC/$DN"
$LDAP

## Adding some object searching to our script
# changing the samAccountType will allow you to retrieve different objects (decimal notation)(eg: 805306368) this is currently setup for retrieving all users.

# Encapsulate Top of LDAP dir in a search query
$direntry = New-Object System.DirectoryServices.DirectoryEntry($LDAP)
$dirsearcher = New-Object System.DirectoryServices.DirectorySearcher($direntry)

# Filter search query based on account type (In decimal)
$dirsearcher.filter='samAccountType=805306368"

# Find all objects & their properties and move each object to a new line
$result = $dirsearcher.FindAll()

Foreach($obj in $result)
{
  Foreach($prop in $obj.Properties)
  {
    $prop
  }

  Write-Host "-----------------------------"
}
